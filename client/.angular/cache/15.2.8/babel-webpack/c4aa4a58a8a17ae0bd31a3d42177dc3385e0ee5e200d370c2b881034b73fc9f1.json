{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class TimerComponent {\n  constructor() {\n    this.hasGameStarted = false;\n    this.timerFinished = new EventEmitter();\n    this.timeLeft = 60;\n  }\n  ngOnInit() {\n    if (this.hasGameStarted) {\n      this.startTimer();\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['hasGameStarted'] && changes['hasGameStarted'].currentValue) {\n      this.startTimer();\n    }\n  }\n  startTimer() {\n    this.timeLeft = 59;\n    this.timerInterval = setInterval(() => {\n      this.timeLeft > 0 ? this.timeLeft-- : this.stopTimer();\n    }, 1000);\n  }\n  stopTimer() {\n    clearInterval(this.timerInterval);\n    this.timerFinished.emit();\n  }\n}\nTimerComponent.ɵfac = function TimerComponent_Factory(t) {\n  return new (t || TimerComponent)();\n};\nTimerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TimerComponent,\n  selectors: [[\"app-timer\"]],\n  inputs: {\n    hasGameStarted: \"hasGameStarted\"\n  },\n  outputs: {\n    timerFinished: \"timerFinished\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"timer\"]],\n  template: function TimerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.timeLeft, \" seconds\");\n    }\n  },\n  styles: [\".timer[_ngcontent-%COMP%] {\\n  font-size: 1.2em;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9nYW1lL3RpbWVyL3RpbWVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxrQkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLnRpbWVyIHtcbiAgZm9udC1zaXplOiAxLjJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoCA,YAAY,QAA8B,eAAe;;AAO7F,OAAM,MAAOC,cAAc;EAL3BC;IAMW,mBAAc,GAAY,KAAK;IAC9B,kBAAa,GAAuB,IAAIF,YAAY,EAAQ;IACtE,aAAQ,GAAW,EAAE;;EAGrBG,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,CAACC,UAAU,EAAE;;EAErB;EAEAC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,gBAAgB,CAAC,IAAIA,OAAO,CAAC,gBAAgB,CAAC,CAACC,YAAY,EAAE;MACvE,IAAI,CAACH,UAAU,EAAE;;EAErB;EAEAA,UAAU;IACR,IAAI,CAACI,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,aAAa,GAAGC,WAAW,CAAC,MAAK;MACpC,IAAI,CAACF,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACA,QAAQ,EAAE,GAAG,IAAI,CAACG,SAAS,EAAE;IACxD,CAAC,EAAE,IAAI,CAAC;EACV;EAEAA,SAAS;IACPC,aAAa,CAAC,IAAI,CAACH,aAAa,CAAC;IACjC,IAAI,CAACI,aAAa,CAACC,IAAI,EAAE;EAC3B;;AA5BWd,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAe;EAAAC;IAAAb;EAAA;EAAAc;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP3BC,8BAAmB;MACdA,YAAsB;MAAAA,iBAAI;;;MAA1BA,eAAsB;MAAtBA,mDAAsB","names":["EventEmitter","TimerComponent","constructor","ngOnInit","hasGameStarted","startTimer","ngOnChanges","changes","currentValue","timeLeft","timerInterval","setInterval","stopTimer","clearInterval","timerFinished","emit","selectors","inputs","outputs","features","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/johnathansimeroth/Documents/sweProjects/word-chain/client/src/app/components/game/timer/timer.component.ts","/Users/johnathansimeroth/Documents/sweProjects/word-chain/client/src/app/components/game/timer/timer.component.html"],"sourcesContent":["import { Component, OnInit, Output, EventEmitter, Input, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\nexport class TimerComponent implements OnInit {\n  @Input() hasGameStarted: boolean = false;\n  @Output() timerFinished: EventEmitter<void> = new EventEmitter<void>();\n  timeLeft: number = 60;\n  timerInterval: any;\n\n  ngOnInit() {\n    if (this.hasGameStarted) {\n      this.startTimer();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['hasGameStarted'] && changes['hasGameStarted'].currentValue) {\n      this.startTimer();\n    }\n  }\n\n  startTimer() {\n    this.timeLeft = 59;\n    this.timerInterval = setInterval(() => {\n      this.timeLeft > 0 ? this.timeLeft-- : this.stopTimer();\n    }, 1000);\n  }\n\n  stopTimer() {\n    clearInterval(this.timerInterval);\n    this.timerFinished.emit();\n  }\n}\n","<div class=\"timer\">\n  <p>{{ timeLeft }} seconds</p>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}